# full-path: docker-compose.yml
version: "3.9"

services:
  database:
    image: postgres:15-alpine
    container_name: db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_HOST_PORT}:${POSTGRES_PORT}"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      database:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "${HOST_PORT}:${PORT}"
    # use a named volume so node_modules from builder persist
    volumes:
      - backend_node_modules:/app/node_modules
    # run migrations then start in prod mode
    command: >
      sh -c "
        pnpm prisma migrate deploy &&
        pnpm run start:prod
      "

volumes:
  db_data:
  backend_node_modules:
